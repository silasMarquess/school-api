// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  organizations Organization[]

  @@map("users")
}

model Organization {
  id        String   @id @default(uuid())
  name      String   @unique
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  classes Class[]

  @@map("organizations")
  @@index([userId])
}

model Class {
  id             String   @id @default(uuid())
  name           String
  description    String
  organizationId String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  students     Student[]

  @@map("classes")
  @@index([organizationId])
}

model Student {
  id        String   @id @default(uuid())
  firstname String
  surname   String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  classId   String

  class Class @relation(fields: [classId], references: [id], onDelete: Cascade)

  @@map("students")
  @@index([classId])
}
